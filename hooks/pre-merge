#!/bin/sh
#-------------------------------------------------------------
# Greeting, motd etc. ...
#-------------------------------------------------------------

# Color definitions (taken from Color Bash Prompt HowTo).
# Some colors might look different of some terminals.
# For example, I see 'Bold Red' as 'orange' on my screen,
# hence the 'Green' 'BRed' 'Red' sequence I often use in my prompt.


# Normal Colors
Black='\e[0;30m'        # Black
Red='\e[0;31m'          # Red
Green='\e[0;32m'        # Green
Yellow='\e[0;33m'       # Yellow
Blue='\e[0;34m'         # Blue
Purple='\e[0;35m'       # Purple
Cyan='\e[0;36m'         # Cyan
White='\e[0;37m'        # White

# Bold
BBlack='\e[1;30m'       # Black
BRed='\e[1;31m'         # Red
BGreen='\e[1;32m'       # Green
BYellow='\e[1;33m'      # Yellow
BBlue='\e[1;34m'        # Blue
BPurple='\e[1;35m'      # Purple
BCyan='\e[1;36m'        # Cyan
BWhite='\e[1;37m'       # White

# Background
On_Black='\e[40m'       # Black
On_Red='\e[41m'         # Red
On_Green='\e[42m'       # Green
On_Yellow='\e[43m'      # Yellow
On_Blue='\e[44m'        # Blue
On_Purple='\e[45m'      # Purple
On_Cyan='\e[46m'        # Cyan
On_White='\e[47m'       # White

NC="\e[m"               # Color Reset


# An example hook script to verify what is about to be committed.
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#
# To enable this hook, rename this file to "pre-commit".

if git rev-parse --verify HEAD >/dev/null 2>&1
then
	against=HEAD
else
	# Initial commit: diff against an empty tree object
	against=4b825dc642cb6eb9a060e54bf8d69288fbee4904
fi

# If you want to allow non-ASCII filenames set this variable to true.
allownonascii=$(git config --bool hooks.allownonascii)

# Redirect output to stderr.
exec 1>&2

# Cross platform projects tend to avoid non-ASCII filenames; prevent
# them from being added to the repository. We exploit the fact that the
# printable range starts at the space character and ends with tilde.
if [ "$allownonascii" != "true" ] &&
	# Note that the use of brackets around a tr range is ok here, (it's
	# even required, for portability to Solaris 10's /usr/bin/tr), since
	# the square bracket bytes happen to fall in the designated range.
	test $(git diff --cached --name-only --diff-filter=A -z $against |
	  LC_ALL=C tr -d '[ -~]\0' | wc -c) != 0
then
	cat <<\EOF
Error: Attempt to add a non-ASCII file name.

This can cause problems if you want to work with people on other platforms.

To be portable it is advisable to rename the file.

If you know what you are doing you can disable this check using:

  git config hooks.allownonascii true
EOF
	exit 1
fi

# If there are whitespace errors, print the offending file names and fail.
#exec git diff-index --check --cached $against --

branch=$(git branch | sed -n -e 's/^\* \(.*\)/\1/p')
branch=$(echo "$branch" | sed -r 's/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|K]//g')

if [ -r $branch ]
		then
			return
		fi

		if [[ $branch == *"dev"* ]]
		then
			COLOR="BGreen";
			printf "\n           ${!COLOR}#########################  ${branch}   #########################${NC}\n\n"
			exit 0
		elif [[ $branch == [0-9]* ]]
		then
			COLOR="BYellow";
			printf "\n           ${!COLOR}#########################  ${branch}   #########################${NC}\n\n"
			exit 0
		else
			COLOR="BRed";
			printf "\n           ${!COLOR}#########################  ${branch}   #########################${NC}\n\n"
		fi

		
		if [[ $2 == *"dev"* ]]
		then
			MCOLOR="BGreen";
		elif [[ $2 == [0-9]* ]]
		then
			MCOLOR="BYellow";
		else
			MCOLOR="BRed";
		fi
		
		
		mbranch=$(printf ${!MCOLOR}$2${NC})
		branch=$(printf ${!COLOR}$branch${NC})

		# Allows us to read user input below, assigns stdin to keyboard
		exec < /dev/tty

		while true; do
		  read -p "Are you sure that you want to merge ${branch} with ${mbranch}? (Y/n) " yn
		  if [ "$yn" = "" ]; then
			yn='n'
		  fi
		  case $yn in
			  [Yy] ) break;;
			  [Nn] ) printf " ${BRed} Aborted!\n ${NC}"; exit 1;;
			  * ) echo "Please answer y or n for yes or no.";;
		  esac
		done